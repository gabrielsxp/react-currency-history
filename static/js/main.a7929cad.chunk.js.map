{"version":3,"sources":["hoc/Aux.js","components/Layout/Layout.js","components/SelectCurrency/SelectCurrency.js","components/ResultComponent/ResultComponent.js","containers/ChartController/ChartController.js","containers/CurrencyControler/CurrencyController.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","layout","react_default","a","createElement","Aux","selectCurrency","items","className","label","onChange","change","value","map","currency","key","type","resultComponent","show","ChartController","state","chartWidth","chartHeight","from","to","toggleResult","showChart","from_currency","to_currency","type_label","posts","data","error","higher","lower","generateClicked","currency_options","chart_controller_option","settings","api_key","function","labels","datasets","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","option","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","offsetGridLines","event","selectedItem","target","typeOfCoin","this","filter","setState","typeOfItem","formattedData","chartData","labelData","topKey","top","down","push","item","splice","length","i","_arr","Object","keys","_i","date","slice","val","parseFloat","toFixed","e","split","splitted","stringDate","reverse","Math","max","apply","toConsumableArray","min","days","buttonClicked","_this2","url","handleGenerateButton","Axios","get","then","response","buildChart","console","log","_this3","GraficoMoeda","Grafico","Line","originArray","destinyArray","SelectCurrency_SelectCurrency","handleChangeFrom","bind","handleChangeTo","handleChangeTime","onClick","makeRequest","disabled","ResultComponent_ResultComponent","height","options","width","Component","CurrencyController","toggleChart","output","requestClicked","results","requestButton","handleRequestButton","handleToggleResult","makeTheRequest","App","mode","newMode","Layout","handleChangeMode","containers_CurrencyControler_CurrencyController","containers_ChartController_ChartController","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7929cad.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport Aux from './../../hoc/Aux';\r\n\r\nconst layout = ( props ) => (\r\n    <Aux>\r\n        <nav>\r\n            <p>Desenvolvido por: Andoly Souza, Gabriel Soares e Rafaella Almeida</p>\r\n        </nav>\r\n        <main>\r\n            {props.children}\r\n        </main>\r\n    </Aux>\r\n);\r\n\r\nexport default layout;\r\n\r\n","import React from 'react';\r\nimport './SelectCurrency.css';\r\n\r\nconst selectCurrency = (props) => {\r\n    const items = props.items;\r\n    return <div className=\"select-wrapper\">\r\n        <label className=\"label\">{props.label}</label>\r\n        <select className=\"select\" onChange={props.change} value={props.value}>\r\n            {items.map(currency => {\r\n                return <option key={currency.label + '-' + currency.type}>{currency.label}</option>;\r\n            })}\r\n        </select>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default selectCurrency;","import React from 'react';\r\nimport './ResultComponent.css'\r\n\r\nconst resultComponent = (props) => (\r\n    <div className={props.show === true ? 'result-container-show' : 'result-container'}>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\n\r\nexport default resultComponent;","import React, {Component} from 'react';\r\nimport Aux from './../../hoc/Aux';\r\nimport Grafico from 'react-chartjs';\r\nimport SelectCurrecy from './../../components/SelectCurrency/SelectCurrency';\r\nimport ResultComponent from './../../components/ResultComponent/ResultComponent';\r\nimport Axios from 'axios';\r\nimport './ChartController.css';\r\n\r\nclass ChartController extends Component {\r\n    state = {\r\n        chartWidth: 400,\r\n        chartHeight: 400,\r\n        from: 'Dolar',\r\n        to: 'Real',\r\n        toggleResult: false,\r\n        showChart: false,\r\n        from_currency: 'USD',\r\n        to_currency: 'BRL',\r\n        type: 0,\r\n        type_label: 'Diario',\r\n        posts: [],\r\n        data: [],\r\n        error: false,\r\n        higher: 0,\r\n        lower: 0,\r\n        generateClicked: false\r\n    }\r\n\r\n    currency_options = [\r\n        {label: 'Dolar', type: 'USD'},\r\n        {label: 'Real', type: 'BRL'},\r\n        {label: 'Euro', type: 'EUR'},\r\n        {label: 'Libra Esterlina', type: 'GBP'},\r\n        {label: 'Peso Argentino', type: 'ARS'},\r\n        {label: 'Peso Chileno', type: 'CLP'}\r\n    ]\r\n\r\n    chart_controller_option = [\r\n        {label: 'Diario', type: 0},\r\n        {label: 'Semanal', type: 1},\r\n        {label: 'Mensal', type: 2}\r\n    ]\r\n\r\n    settings = {\r\n        api_key: '1751432QIFNSF8Y9',\r\n        function: 'FY_DAILY',\r\n    }\r\n\r\n\r\n    data = {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: \"Gráfico Resultante\",\r\n                fillColor: \"rgba(204,224,241,0.2)\",\r\n                strokeColor: \"rgba(241,204,224,1)\",\r\n                pointColor: \"rgba(144,188,225,1)\",\r\n                pointStrokeColor: \"#fff\",\r\n                pointHighlightFill: \"#fff\",\r\n                pointHighlightStroke: \"rgba(220,220,220,1)\",\r\n                data: [1,2,3,4,5]\r\n            }\r\n        ]\r\n    };\r\n\r\n    option = {\r\n\r\n        ///Boolean - Whether grid lines are shown across the chart\r\n        scaleShowGridLines : true,\r\n    \r\n        //String - Colour of the grid lines\r\n        scaleGridLineColor : \"rgba(0,0,0,.05)\",\r\n    \r\n        //Number - Width of the grid lines\r\n        scaleGridLineWidth : 1,\r\n    \r\n        //Boolean - Whether to show horizontal lines (except X axis)\r\n        scaleShowHorizontalLines: true,\r\n    \r\n        //Boolean - Whether to show vertical lines (except Y axis)\r\n        scaleShowVerticalLines: true,\r\n    \r\n        //Boolean - Whether the line is curved between points\r\n        bezierCurve : true,\r\n    \r\n        //Number - Tension of the bezier curve between points\r\n        bezierCurveTension : 0.4,\r\n    \r\n        //Boolean - Whether to show a dot for each point\r\n        pointDot : true,\r\n    \r\n        //Number - Radius of each point dot in pixels\r\n        pointDotRadius : 4,\r\n    \r\n        //Number - Pixel width of point dot stroke\r\n        pointDotStrokeWidth : 1,\r\n    \r\n        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\r\n        pointHitDetectionRadius : 20,\r\n    \r\n        //Boolean - Whether to show a stroke for datasets\r\n        datasetStroke : true,\r\n    \r\n        //Number - Pixel width of dataset stroke\r\n        datasetStrokeWidth : 2,\r\n    \r\n        //Boolean - Whether to horizontally center the label and point dot inside the grid\r\n        offsetGridLines : false\r\n    };\r\n\r\n    handleChangeFrom(event){\r\n        const selectedItem = event.target.value;\r\n        let typeOfCoin = this.currency_options.filter((value) => (\r\n            selectedItem === value.label\r\n        ));\r\n        typeOfCoin = typeOfCoin[0].type;\r\n        this.setState({from: selectedItem, from_currency:typeOfCoin, toggleResult: false});\r\n    }\r\n\r\n    handleChangeTo(event){\r\n        const selectedItem = event.target.value;\r\n        let typeOfCoin = this.currency_options.filter((value) => (\r\n            selectedItem === value.label\r\n        ));\r\n        typeOfCoin = typeOfCoin[0].type;\r\n        this.setState({to: selectedItem, to_currency:typeOfCoin, toggleResult: false});\r\n    }\r\n\r\n    handleChangeTime(event){\r\n        const selectedItem = event.target.value;\r\n        let typeOfItem = this.chart_controller_option.filter((value) => (\r\n            selectedItem === value.label\r\n        ));\r\n        typeOfItem = typeOfItem[0].type;\r\n        this.setState({type: typeOfItem, type_label: selectedItem, toggleResult: false});\r\n    }\r\n\r\n    buildChart(){\r\n        const posts = this.state.posts;\r\n        let data = [];\r\n        let formattedData = [];\r\n\r\n        let chartData = [];\r\n        let labelData = [];\r\n        let topKey = 'Time Series FX ('+ (this.state.type === 0 ? 'Daily' : (this.state.type === 1 ? 'Weekly' : 'Monthly')) +')';\r\n    \r\n        for(let top in posts){\r\n            if(top === topKey){\r\n                for(let down in posts[top]){\r\n                    data.push(posts[top]);\r\n                }\r\n            }\r\n        }\r\n\r\n        data = data.splice(data.length-1, 1);\r\n        for(let item in data){\r\n            formattedData.push(data[item]);\r\n        }\r\n        for(let i in formattedData){\r\n            for(let key of Object.keys(formattedData[i])){\r\n                chartData.push(formattedData[i][key]['2. high']);\r\n                labelData.push(key);\r\n            }\r\n        }\r\n\r\n        chartData = chartData.slice(0, 7).map(val => (parseFloat(val).toFixed(2)));\r\n        labelData = labelData.slice(0,7).map(e => (e.split(\"-\")));\r\n\r\n        for(let date in labelData){\r\n            let splitted = labelData[date];\r\n            let stringDate = splitted[2] + '/' + splitted[1];\r\n            labelData[date] = stringDate;\r\n        }\r\n\r\n        let error = false;\r\n        if(chartData.length === 0){\r\n            error = true;\r\n        } else {\r\n            this.data.datasets[0].data = chartData.reverse();\r\n            this.data.labels = labelData.reverse();\r\n        }\r\n\r\n        const higher = Math.max(...chartData);\r\n        const lower = Math.min(...chartData);\r\n        this.setState({data: chartData, days: labelData, toggleResult: !error, error: error, higher: higher, lower: lower, generateClicked: false});\r\n    }\r\n    \r\n    handleGenerateButton(){\r\n        const buttonClicked = !this.state.generateClicked;\r\n        this.setState({generateClicked: buttonClicked});\r\n    }\r\n\r\n    makeRequest(){\r\n        let url = '';\r\n        this.handleGenerateButton();\r\n        switch(this.state.type){\r\n            case 0:\r\n                this.settings.function = 'FX_DAILY';\r\n                url = 'https://www.alphavantage.co/query?function='+this.settings.function+'&from_symbol='+this.state.from_currency+'&to_symbol='+this.state.to_currency+'&apikey='+this.settings.api_key;\r\n                Axios.get(url).then((response) => {\r\n                    this.setState({posts: response.data});\r\n                    this.buildChart();\r\n                });\r\n            break;\r\n            case 1:\r\n                this.settings.function = 'FX_WEEKLY';\r\n                url = 'https://www.alphavantage.co/query?function='+this.settings.function+'&from_symbol='+this.state.from_currency+'&to_symbol='+this.state.to_currency+'&apikey='+this.settings.api_key;\r\n                Axios.get(url).then((response) => {\r\n                    this.setState({posts: response.data});\r\n                    this.buildChart();\r\n                });\r\n            break;\r\n            case 2:\r\n                console.log(\"Entrei 2\");\r\n                this.settings.function = 'FX_MONTHLY';\r\n                url = 'https://www.alphavantage.co/query?function='+this.settings.function+'&from_symbol='+this.state.from_currency+'&to_symbol='+this.state.to_currency+'&apikey='+this.settings.api_key;\r\n                \r\n                Axios.get(url).then((response) => {\r\n                    console.log(response.data);\r\n                    this.setState({posts: response.data});\r\n                    this.buildChart();\r\n                });\r\n            break;\r\n            default:\r\n                \r\n            break;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        console.log(this.state.from, this.state.to);\r\n        const GraficoMoeda = Grafico.Line;\r\n        const originArray = this.currency_options;\r\n        const destinyArray = this.currency_options.filter((currency) => currency.label !== this.state.from);\r\n        return(\r\n            <Aux>\r\n                <div className=\"chartController\">\r\n                    <SelectCurrecy label=\"Moeda de Origem\" value={this.state.from} items={originArray} change={this.handleChangeFrom.bind(this)}/>\r\n                    <SelectCurrecy label=\"Moeda de Destino\" value={this.state.to} items={destinyArray} change={this.handleChangeTo.bind(this)}/>\r\n                    <SelectCurrecy label=\"Intervalo de tempo\" value={this.state.type_label} items={this.chart_controller_option} change={this.handleChangeTime.bind(this)}/>\r\n                    <button onClick={this.makeRequest.bind(this)} disabled={this.state.generateClicked}>{(this.state.generateClicked === false ? 'Gerar' : 'Gerando...')}</button>\r\n                </div>\r\n                <ResultComponent show={this.state.toggleResult} height={this.state.chartHeight}>\r\n                    {this.state.error === true ? <p className=\"error\">Faça a requisição novamente</p> : ''}\r\n                    {(this.state.toggleResult === true && this.state.error === false) ? <GraficoMoeda data={this.data} options={this.option} width=\"500\" height=\"250\"/> : ''}\r\n                    <div className=\"stats\">\r\n                    {(this.state.toggleResult === true && this.state.error === false) ? <h4>Maior valor: {this.state.to_currency} {this.state.higher}</h4>:''}\r\n                    {(this.state.toggleResult === true && this.state.error === false) ? <h4>Menor valor: {this.state.to_currency} {this.state.lower}</h4>:''}\r\n                    </div>\r\n                </ResultComponent>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartController;","import React, {Component} from 'react';\r\nimport './CurrencyController.css';\r\nimport SelectCurrency from './../../components/SelectCurrency/SelectCurrency';\r\nimport Aux from  './../../hoc/Aux';\r\nimport ResultComponent from './../../components/ResultComponent/ResultComponent';\r\nimport Axios from 'axios';\r\nimport ChartController from '../ChartController/ChartController';\r\n\r\nclass CurrencyController extends Component {\r\n\r\n    state = {\r\n        from: 'Dolar',\r\n        to: 'Real',\r\n        from_currency: 'USD',\r\n        to_currency: 'BRL',\r\n        toggleResult: false,\r\n        toggleChart: false,\r\n        output: '',\r\n        posts: [],\r\n        requestClicked: false\r\n    }\r\n\r\n    currency_options = [\r\n        {label: 'Dolar', type: 'USD'},\r\n        {label: 'Real', type: 'BRL'},\r\n        {label: 'Dolar Australiano', type: 'AUD'},\r\n        {label: 'Euro', type: 'EUR'},\r\n        {label: 'Libra Esterlina', type: 'GBP'},\r\n        {label: 'Peso Argentino', type: 'ARS'},\r\n        {label: 'Peso Chileno', type: 'CLP'}\r\n    ]\r\n\r\n    settings = {\r\n        api_key: '1751432QIFNSF8Y9',\r\n        url: 'https://www.alphavantage.co/query?function=',\r\n        function: 'CURRENCY_EXCHANGE_RATE',\r\n        from_currency: 'USD',\r\n        to_currency: 'BRL',\r\n    }\r\n\r\n    handleChangeFrom(event){\r\n        const selectedItem = event.target.value;\r\n        let typeOfCoin = this.currency_options.filter((value) => (\r\n            selectedItem === value.label\r\n        ));\r\n        typeOfCoin = typeOfCoin[0].type;\r\n        this.setState({from: selectedItem, from_currency:typeOfCoin, toggleResult: false});\r\n    }\r\n\r\n    handleChangeTo(event){\r\n        const selectedItem = event.target.value;\r\n        let typeOfCoin = this.currency_options.filter((value) => (\r\n            selectedItem === value.label\r\n        ));\r\n        typeOfCoin = typeOfCoin[0].type;\r\n        this.setState({to: selectedItem, to_currency:typeOfCoin, toggleResult: false});\r\n    }\r\n\r\n    handleToggleResult(){\r\n        const newState = true;\r\n        let results = [];\r\n        for(let top in this.state.posts){\r\n            for(let down in this.state.posts[top]){\r\n                results.push(this.state.posts[top][down]);\r\n            }\r\n        }\r\n        \r\n        const output = parseFloat(results[4]).toFixed(2);\r\n        \r\n        this.setState(\r\n            {toggleResult: newState, output: output, requestClicked: false}\r\n        );\r\n    }\r\n\r\n    handleRequestButton(){\r\n        const requestButton = !this.state.requestClicked;\r\n        this.setState({requestClicked: requestButton});\r\n    }\r\n\r\n    makeTheRequest(){\r\n        this.handleRequestButton();\r\n        const url = 'https://www.alphavantage.co/query?function='+this.settings.function+'&from_currency='+this.state.from_currency+'&to_currency='+this.state.to_currency+'&apikey='+this.settings.api_key;\r\n        Axios.get(url).then((response) => {\r\n            this.setState({posts: response.data});\r\n            this.handleToggleResult();\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.from, this.state.from_currency, this.state.to, this.state.to_currency);\r\n        const originArray = this.currency_options;\r\n        const destinyArray = this.currency_options.filter((currency) => currency.label !== this.state.from);\r\n        return(\r\n            <Aux>\r\n                <div className=\"currencyController\">\r\n                    <SelectCurrency label=\"Selecione a moeda de Origem\" value={this.state.from} items={originArray} change={this.handleChangeFrom.bind(this)}/>\r\n                    <SelectCurrency label=\"Selecione a moeda de Destino\" value={this.state.to} items={destinyArray} change={this.handleChangeTo.bind(this)}/>\r\n                    <button disabled={this.state.requestClicked} onClick={this.makeTheRequest.bind(this)}>{(this.state.requestClicked === false ? 'Converter' : 'Convertendo...')}</button>\r\n                </div>\r\n                <ResultComponent show={this.state.toggleResult}>\r\n                    <label>1 {this.state.from} = {this.state.output} {this.state.to}</label>\r\n                </ResultComponent>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrencyController;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport './App.css';\nimport CurrencyController from './containers/CurrencyControler/CurrencyController';\nimport ChartController from './containers/ChartController/ChartController';\n\nclass App extends Component {\n  state = {\n    mode: 'currency'\n  }\n\n  handleChangeMode(){\n    const newMode = (this.state.mode === \"currency\" ? \"chart\" : \"currency\");\n    this.setState({mode: newMode});\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <Layout>\n            <div className=\"app-container\">\n              <button onClick={this.handleChangeMode.bind(this)} className=\"selectMode\">Modo {this.state.mode === \"currency\" ? 'Gráfico' : 'de Conversão'}</button>\n              {this.state.mode === \"currency\" ? <CurrencyController /> : <ChartController />}\n            </div>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}